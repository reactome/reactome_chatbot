name: reactome_chatbot CI

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:

  lint:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root

    - name: Run linters
      run: |
        poetry run ruff check .
        poetry run mypy .
        poetry run isort --check .

  docker-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: reactome_chatbot:${{ github.sha }}

    - uses: actions/upload-artifact@v3
      with:
        name: docker-image
        path: /tmp/image.tar

  docker-push:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: docker-image
        path: /tmp

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker load --input /tmp/image.tar
        docker tag reactome_chatbot:${{ github.sha }} $ECR_REGISTRY/reactome_chatbot:$IMAGE_TAG
        docker tag reactome_chatbot:${{ github.sha }} $ECR_REGISTRY/reactome_chatbot:latest
        docker push $ECR_REGISTRY/reactome_chatbot:$IMAGE_TAG
        docker push $ECR_REGISTRY/reactome_chatbot:latest
