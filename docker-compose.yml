services:
  chainlit:
    image: ${CHAINLIT_IMAGE}
    container_name: biochat_chainlit
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_CHAINLIT_DB=${POSTGRES_CHAINLIT_DB}
      - POSTGRES_LANGGRAPH_DB=${POSTGRES_LANGGRAPH_DB}
      - LOG_LEVEL=${LOG_LEVEL}
      - CHAT_ENV=${CHAT_ENV}
      - CLOUDFLARE_SECRET_KEY=${CLOUDFLARE_SECRET_KEY}
      - CLOUDFLARE_SITE_KEY=${CLOUDFLARE_SITE_KEY}
      - OAUTH_AUTH0_CLIENT_ID=${OAUTH_AUTH0_CLIENT_ID}
      - OAUTH_AUTH0_CLIENT_SECRET=${OAUTH_AUTH0_CLIENT_SECRET}
      - OAUTH_AUTH0_DOMAIN=${OAUTH_AUTH0_DOMAIN}
      - OAUTH_GOOGLE_CLIENT_ID=${OAUTH_GOOGLE_CLIENT_ID}
      - OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}
      - CHAINLIT_AUTH_SECRET=${CHAINLIT_AUTH_SECRET}
      - CHAINLIT_URI=${CHAINLIT_URI}
      - CHAINLIT_URL=${CHAINLIT_URL}
      - CHAINLIT_ROOT_PATH=${CHAINLIT_ROOT_PATH}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./embeddings:/app/embeddings
      - ./records:/app/records

  chainlit-no-login:
    image: ${CHAINLIT_IMAGE}
    container_name: biochat_chainlit_no_login
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_LANGGRAPH_DB=${POSTGRES_LANGGRAPH_DB}_no_login
      - CHAT_ENV=${CHAT_ENV}
      - CLOUDFLARE_SECRET_KEY=${CLOUDFLARE_SECRET_KEY}
      - CLOUDFLARE_SITE_KEY=${CLOUDFLARE_SITE_KEY}
      - CHAINLIT_URI=${CHAINLIT_URI_NO_LOGIN}
      - CHAINLIT_URI_LOGIN=${CHAINLIT_URI}
      - CHAINLIT_URL=${CHAINLIT_URL}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./embeddings:/app/embeddings


  postgres:
    image: postgres:13
    container_name: biochat_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      ports:
        - 16543:80
      volumes:
        - ./servers.json:/pgadmin4/servers.json

volumes:
  postgres_data:
